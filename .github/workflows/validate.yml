name: Validate HolyC Syntax

on:
  push:
    branches: [ main, develop, "copilot/*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-syntax:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Divine Repository
      uses: actions/checkout@v4
      
    - name: Validate HolyC Files Exist
      run: |
        echo "=== Validating Divine HolyC Files ==="
        
        # Check hello-world example
        if [ -f "examples/hello-world/src/main.hc" ]; then
          echo "‚úì Hello World divine program exists"
          echo "Content preview:"
          head -10 examples/hello-world/src/main.hc
        else
          echo "‚úó Hello World program missing"
          exit 1
        fi
        
        # Check escrow example  
        if [ -f "examples/escrow/src/main.hc" ]; then
          echo "‚úì Escrow divine contract exists"
          echo "Content preview:"
          head -10 examples/escrow/src/main.hc
        else
          echo "‚úó Escrow contract missing"
          exit 1
        fi
        
        # Check types file
        if [ -f "examples/escrow/src/types.hc" ]; then
          echo "‚úì Escrow types definitions exist"
          echo "Content preview:"
          head -10 examples/escrow/src/types.hc
        else
          echo "‚úó Escrow types missing"
          exit 1
        fi
        
    - name: Check Rust Build Configuration
      run: |
        echo "=== Validating Rust Build Configuration ==="
        
        # Check main Cargo.toml
        if [ -f "Cargo.toml" ]; then
          echo "‚úì Cargo.toml exists"
          if grep -q "pible" Cargo.toml; then
            echo "‚úì Pible binary configuration found"
          else
            echo "‚úó Pible binary not configured in Cargo.toml"
            exit 1
          fi
        else
          echo "‚úó Cargo.toml missing"
          exit 1
        fi
        
        # Check for main source files
        if [ -f "src/main.rs" ]; then
          echo "‚úì Main Rust source exists"
        else
          echo "‚úó src/main.rs missing"
          exit 1
        fi
        
        # Check for pible module
        if [ -f "src/pible/mod.rs" ]; then
          echo "‚úì Pible module exists"
        else
          echo "‚úó src/pible/mod.rs missing"
          exit 1
        fi
        
    - name: Validate Documentation
      run: |
        echo "=== Validating Divine Documentation ==="
        
        # Check main README
        if [ -f "README.md" ]; then
          echo "‚úì Main documentation exists"
          echo "Documentation preview:"
          head -15 README.md
        else
          echo "‚úó Main documentation missing"
          exit 1
        fi
        
        # Check escrow README
        if [ -f "examples/escrow/README.md" ]; then
          echo "‚úì Escrow documentation exists"
          echo "Documentation preview:"
          head -15 examples/escrow/README.md
        else
          echo "‚úó Escrow documentation missing"
          exit 1
        fi
        
        echo "All divine validations passed! üôè"

  validate-rust-project:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Divine Repository
      uses: actions/checkout@v4
      
    - name: Install Rust Toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
        
    - name: Validate Rust Project Structure
      run: |
        echo "=== Validating Rust Project Structure ==="
        
        # Verify cargo check passes
        echo "Running cargo check..."
        cargo check --all-targets --all-features
        
        # Verify project can build
        echo "Testing build..."
        cargo build --release
        
        # Verify basic functionality
        echo "Testing compiler functionality..."
        ./target/release/pible --help
        
        echo "Rust project validation complete! ‚úì"